<?php

/**
 * @file
 * Contains pnwds_custom.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function pnwds_custom_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the pnwds_custom module.
    case 'help.page.pnwds_custom':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Customizations for PNWDS site.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Rename user tabs.
 */
function pnwds_custom_menu_local_tasks_alter(&$data, $route_name) {
  if(isset($data['tabs'][0]['entity.user.edit_form'])) {
    ($data['tabs'][0]['entity.user.edit_form']['#link']['title'] = t('Account'));
  }
  if(isset($data['tabs'][0]['form_mode_manager.entities:form_mode_manager.user.profile.task_tab'])) {
    ($data['tabs'][0]['form_mode_manager.entities:form_mode_manager.user.profile.task_tab']['#link']['title'] = t('Profile'));
  }
}

/**
 * Use theme templates in views.
 */
function pnwds_custom_theme_registry_alter(&$theme_registry) {
  $theme_registry['views_view_unformatted']['path'] = '/' . drupal_get_path('theme', 'pnwds_2020') . '/templates';

  $theme_registry['taxonomy_term__days'] = array_merge($theme_registry['taxonomy_term'], [
    'path' => '/' . drupal_get_path('theme', 'pnwds_2020') . '/templates',
    'template' => 'taxonomy-term--days'
  ]);

  $theme_registry['taxonomy_term__schedule'] = array_merge($theme_registry['taxonomy_term'], [
    'path' => '/' . drupal_get_path('theme', 'pnwds_2020') . '/templates',
    'template' => 'taxonomy-term--schedule'
  ]);

  $theme_registry['node__session__teaser'] = array_merge($theme_registry['node'], [
    'path' => '/' . drupal_get_path('theme', 'pnwds_2020') . '/templates',
    'template' => 'node--session--teaser'
  ]);
}

/**
 * Session node modifications.
 */
function pnwds_custom_preprocess_node(&$variables) {
  if ($variables['node']->bundle() != 'session') {
    return;
  }

  $node = $variables['node'];
  // Combine author and additional authors fields.
  $authors = array_merge($node->uid->referencedEntities(), $node->field_additional_authors->referencedEntities());

  switch ($variables['view_mode']) {
    // Add authors to bottom of session.
    case 'full':
      array_walk($authors, function(&$author, $key) {
        $author_name = $author->label();
        $author = array_merge(['#markup' => "<h2>$author_name</h2>"],
           [\Drupal::entityTypeManager()->getViewBuilder('user')->view($author, 'session_author')]);
      });
      $variables['content']['authors'] = [
        '#weight' => 100,
        $authors
      ];
      break;
    case 'teaser':
      array_walk($authors, function(&$author, $key) {
        $author = $author->label();
      });
      $variables['authors']['#markup'] = implode(', ', $authors);
      break;
  }
}
